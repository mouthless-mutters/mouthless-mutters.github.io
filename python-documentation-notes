Useful links about python documentation

Doctest: The doctest module searches for pieces of text that look like interactive Python sessions and then executes those sessions to verify that they work exactly as shown.
https://docs.python.org/3/library/doctest.html

Type Hinting: The typing module provides a standard way to specify the types of variables, function parameters, and return values, enhancing code readability and facilitating static analysis.
https://docs.python.org/3/library/typing.html

Docstrings: Docstrings are string literals that appear right after the definition of a function, method, class, or module, serving as a convenient way of associating documentation with Python code.
https://en.wikipedia.org/wiki/Docstring

Introspection: Python's introspection capabilities allow you to examine the type or properties of objects at runtime, which can be useful for understanding and documenting code behavior.
https://docs.python.org/3/library/inspect.html

Pydoc: The pydoc module automatically generates documentation from Python modules, providing a convenient way to access documentation on modules, classes, functions, and methods.
https://docs.python.org/3/library/pydoc.html

Sphinx: Sphinx is a tool that translates a set of reStructuredText source files into various output formats, including HTML and PDF, and is commonly used for documenting Python projects.
https://www.sphinx-doc.org/en/master/
